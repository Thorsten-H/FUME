{"version":3,"sources":["index.js"],"names":["nameToGreet","core","console","log","Date","toTimeString","payload","JSON","stringify","github","undefined"],"mappings":"6FAAA,2BAYQA,EAAcC,WAAc,UAClCA,YAAe,YAAa,OAE5BC,QAAQC,IAAR,gBAAqBH,EAArB,OACc,IAAII,MAAQC,eAA1B,IAIMC,EAAUC,KAAKC,UAAUC,UAAeH,aAASI,EAAW,GAClER,QAAQC,IAAR,6BAAkCG,K","file":"static/js/main.930cd5cc.chunk.js","sourcesContent":["// import React from \"react\"\r\n// import ReactDOM from \"react-dom\"\r\n// import App from './App';\r\n// import { HashRouter, BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\r\n\r\n// ReactDOM.render( <HashRouter><App /></HashRouter>  , document.getElementById(\"root\")) \r\n\r\nimport * as core from '@actions/core'\r\nimport * as github from '@actions/github'\r\n\r\n// try {\r\n  // `who-to-greet` input defined in action metadata file\r\n  const nameToGreet = core.getInput('action');\r\n  core.saveState(\"pidToKill\", 12345)\r\n    \r\n  console.log(`Hello ${nameToGreet}!`);\r\n  const time = (new Date()).toTimeString();\r\n//   core.setOutput(\"time\", time);\r\n\r\n  // Get the JSON webhook payload for the event that triggered the workflow\r\n  const payload = JSON.stringify(github.context.payload, undefined, 2)\r\n  console.log(`The event payload: ${payload}`);\r\n// } catch (error) {\r\n//   core.setFailed(error.message);\r\n// }"],"sourceRoot":""}